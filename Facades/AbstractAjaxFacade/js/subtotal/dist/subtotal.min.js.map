{"version":3,"sources":["subtotal.coffee"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","aggregatorTemplates","subtotalAggregatorTemplates","usFmtPct","superClass","input","opts","processKey","record","totals","keys","attrs","getAggregator","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","results1","l","ref1","pivotUtilities","PivotData","pivotData","addClass","adjustAxisHeader","arrowCollapsed","arrowExpanded","buildAxisHeader","buildColAxisHeaders","buildColHeader","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowAxisHeaders","buildRowHeader","buildRowTotalsHeader","buildValues","classColCollapsed","classColExpanded","classColHide","classColShow","classCollapsed","classExpanded","classRowCollapsed","classRowExpanded","classRowHide","classRowShow","clickStatusCollapsed","clickStatusExpanded","collapseAxis","collapseAxisHeaders","collapseChildCol","collapseChildRow","collapseCol","collapseHiddenColSubtotal","collapseRow","collapseShowColSubtotal","collapseShowRowSubtotal","createElement","defaults","expandAxis","expandChildCol","expandChildRow","expandCol","expandHideColSubtotal","expandHideRowSubtotal","expandRow","expandShowColSubtotal","expandShowRowSubtotal","getHeaderText","getTableEventHandlers","hasClass","hideChildCol","hideChildRow","processKeys","removeClass","replaceClass","showChildCol","showChildRow","table","clickCallback","localeStrings","subtotalOf","rowSubtotalDisplay","displayOnTop","disableFrom","collapseAt","hideOnExpand","disableExpandCollapse","colSubtotalDisplay","disableSubtotal","disableAfter","collapseRowsAt","collapseColsAt","getRowKeys","getColKeys","element","className","regExp","RegExp","match","name","split","replace","replaceClassName","byClassName","elementType","textContent","attributes","eventHandlers","e","event","handler","val","document","setAttribute","addEventListener","a","v","keysArr","headers","lastIdx","row","children","reduce","val0","k0","col","acc","curVal","curIdx","arr","node","descendants","text","firstLeaf","leaves","th","childrenSpan","axisHeaders","ah","arrow","hClass","expandedCount","expandables","attrHeaders","clickStatus","onClick","onclick","window","thead","collapseAttrHeader","expandAttrHeader","tr","appendChild","colspan","rowspan","h","chKey","counter","colSpan","rowSpan","sTh","tbody","firstChild","insertBefore","sTr","value","filters","colAttrHeaders","rowAttrHeaders","ch","cls","len1","rCls","rh","td","totalAggregator","format","data-value","data-rownode","data-colnode","data-row","data-rowcol","clsNames","data-for","collapsible","Math","min","closest","find","p","cell","querySelectorAll","ref2","colAxisHeaders","colKeyHeaders","result","rowAxisHeaders","rowKeyHeaders","style","display","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap","numberFormat","digitsAfterDecimal","scaler","suffix","fractionOf","wrapped","type","formatter","x","arguments","data","selector","inner","apply","numInputs","subtotal_aggregators","tpl","sTpl","Sum As Fraction Of Parent Row","sum","Sum As Fraction Of Parent Column","Count As Fraction Of Parent Row","count","Count As Fraction Of Parent Column"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super input, opts\r\n\r\n        processKey = (record, totals, keys, attrs, getAggregator) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join String.fromCharCode(0)\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = getAggregator key.slice()\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            keys.push key if addKey\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                return @aggregator this, key, []\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                return @aggregator this, [], key\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            return if m < 0 or n < 0\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join String.fromCharCode(0)\r\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice 0, j+1\r\n                    flatColKey = fColKey.join String.fromCharCode(0)\r\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\", subtotalOf: \"Subtotal of\"\r\n            arrowCollapsed: \"\\u25B6\"\r\n            arrowExpanded: \"\\u25E2\"\r\n            rowSubtotalDisplay:\r\n                displayOnTop: true\r\n                disableFrom: 99999\r\n                collapseAt: 99999\r\n                hideOnExpand: false\r\n                disableExpandCollapse: false\r\n            colSubtotalDisplay:\r\n                displayOnTop: true\r\n                disableFrom: 99999\r\n                collapseAt: 99999\r\n                hideOnExpand: false\r\n                disableExpandCollapse: false\r\n        opts = $.extend true, {}, defaults, opts\r\n\r\n        opts.rowSubtotalDisplay.disableFrom = 0 if opts.rowSubtotalDisplay.disableSubtotal\r\n        opts.rowSubtotalDisplay.disableFrom = opts.rowSubtotalDisplay.disableAfter+1 if typeof  opts.rowSubtotalDisplay.disableAfter isnt 'undefined' and opts.rowSubtotalDisplay.disableAfter isnt null\r\n        opts.rowSubtotalDisplay.collapseAt = opts.collapseRowsAt if typeof opts.rowSubtotalDisplay.collapseAt isnt 'undefined' and opts.collapseRowsAt isnt null\r\n\r\n        opts.colSubtotalDisplay.disableFrom = 0 if opts.colSubtotalDisplay.disableSubtotal\r\n        opts.colSubtotalDisplay.disableFrom = opts.colSubtotalDisplay.disableAfter+1 if typeof  opts.colSubtotalDisplay.disableAfter isnt 'undefined' and opts.colSubtotalDisplay.disableAfter isnt null\r\n        opts.colSubtotalDisplay.collapseAt = opts.collapseColsAt if typeof opts.colSubtotalDisplay.collapseAt isnt 'undefined' and opts.collapseColsAt isnt null\r\n\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        classRowHide = \"rowhide\"\r\n        classRowShow = \"rowshow\"\r\n        classColHide = \"colhide\"\r\n        classColShow = \"colshow\"\r\n        clickStatusExpanded = \"expanded\"\r\n        clickStatusCollapsed = \"collapsed\"\r\n        classExpanded = \"expanded\"\r\n        classCollapsed = \"collapsed\"\r\n        classRowExpanded = \"rowexpanded\"\r\n        classRowCollapsed = \"rowcollapsed\"\r\n        classColExpanded = \"colexpanded\"\r\n        classColCollapsed = \"colcollapsed\"\r\n        arrowExpanded = opts.arrowExpanded\r\n        arrowCollapsed = opts.arrowCollapsed\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className.match(regExp) isnt null\r\n\r\n        removeClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                regExp = new RegExp \"(?:^|\\\\s)\" + name + \"(?!\\\\S)\", \"g\"\r\n                element.className = element.className.replace regExp, ''\r\n\r\n        addClass = (element, className) ->\r\n            for name in className.split \" \"\r\n                element.className += (\" \" + name) if not hasClass element, name\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End \r\n\r\n        createElement = (elementType, className, textContent, attributes, eventHandlers) ->\r\n            e = document.createElement elementType\r\n            e.className = className if className?\r\n            e.textContent = textContent if textContent?\r\n            e.setAttribute attr, val for own attr, val of attributes if attributes?\r\n            e.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\r\n            return e\r\n\r\n        setAttributes = (e, attrs) ->\r\n            e.setAttribute a, v for own a, v of attrs\r\n\r\n        processKeys = (keysArr, className, opts) ->\r\n            lastIdx = keysArr[0].length-1\r\n            headers = children: []\r\n            row = 0\r\n            keysArr.reduce(\r\n                (val0, k0) => \r\n                    col = 0\r\n                    k0.reduce(\r\n                        (acc, curVal, curIdx, arr) => \r\n                            if not acc[curVal]\r\n                                key = k0.slice 0, col+1\r\n                                acc[curVal] =\r\n                                    row: row\r\n                                    col: col\r\n                                    descendants: 0\r\n                                    children: []\r\n                                    text: curVal\r\n                                    key: key \r\n                                    flatKey: key.join String.fromCharCode(0) \r\n                                    firstLeaf: null \r\n                                    leaves: 0\r\n                                    parent: if col isnt 0 then acc else null\r\n                                    th: createElement \"th\", className, curVal\r\n                                    childrenSpan: 0\r\n                                acc.children.push curVal\r\n                            if col > 0 \r\n                                acc.descendants++\r\n                            col++\r\n                            if curIdx == lastIdx\r\n                                node = headers\r\n                                for i in [0..lastIdx-1] when lastIdx > 0\r\n                                    node[k0[i]].leaves++\r\n                                    if not node[k0[i]].firstLeaf \r\n                                        node[k0[i]].firstLeaf = acc[curVal]\r\n                                    node = node[k0[i]]\r\n                                return headers\r\n                            return acc[curVal]\r\n                        headers)\r\n                    row++\r\n                    return headers\r\n                headers)\r\n            return headers\r\n\r\n        buildAxisHeader = (axisHeaders, col, attrs, opts) ->\r\n            ah =\r\n                text: attrs[col]\r\n                expandedCount: 0\r\n                expandables: 0\r\n                attrHeaders: []\r\n                clickStatus: clickStatusExpanded\r\n                onClick: collapseAxis\r\n\r\n            arrow = \"#{arrowExpanded} \"\r\n            hClass = classExpanded\r\n            if col >= opts.collapseAt\r\n                arrow = \"#{arrowCollapsed} \"\r\n                hClass = classCollapsed\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n            if col == attrs.length-1 or col >= opts.disableFrom or opts.disableExpandCollapse\r\n                arrow = \"\"\r\n            ah.th = createElement \"th\", \"pvtAxisLabel #{hClass}\", \"#{arrow}#{ah.text}\" \r\n            if col < attrs.length-1 and col < opts.disableFrom and not opts.disableExpandCollapse\r\n                ah.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    ah.onClick axisHeaders, col, attrs, opts\r\n            axisHeaders.ah.push ah\r\n            return ah \r\n\r\n        buildColAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseCol\r\n                expandAttrHeader: expandCol\r\n                ah: []\r\n            for attr, col in colAttrs\r\n                ah = buildAxisHeader axisHeaders, col, colAttrs, opts.colSubtotalDisplay\r\n                ah.tr = createElement \"tr\"\r\n                ah.tr.appendChild createElement \"th\", null, null, {colspan: rowAttrs.length, rowspan: colAttrs.length} if col is 0 and rowAttrs.length isnt 0\r\n                ah.tr.appendChild ah.th\r\n                thead.appendChild ah.tr\r\n            return axisHeaders\r\n\r\n        buildRowAxisHeaders = (thead, rowAttrs, colAttrs, opts) ->\r\n            axisHeaders =\r\n                collapseAttrHeader: collapseRow\r\n                expandAttrHeader: expandRow\r\n                ah: []\r\n                tr: createElement \"tr\"\r\n            for col in [0..rowAttrs.length-1] \r\n                ah = buildAxisHeader axisHeaders, col, rowAttrs, opts.rowSubtotalDisplay\r\n                axisHeaders.tr.appendChild ah.th\r\n            if colAttrs.length != 0\r\n                th = createElement \"th\"\r\n                axisHeaders.tr.appendChild th\r\n            thead.appendChild axisHeaders.tr\r\n            return axisHeaders\r\n\r\n        getHeaderText = (h, attrs, opts) ->\r\n            arrow = \" #{arrowExpanded} \"\r\n            arrow = \"\" if h.col == attrs.length-1 or h.col >= opts.disableFrom or opts.disableExpandCollapse or h.children.length is 0\r\n            return \"#{arrow}#{h.text}\"\r\n\r\n        buildColHeader = (axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildColHeader axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            h.onClick = collapseCol\r\n\r\n            addClass h.th, \"#{classColShow} col#{h.row} colcol#{h.col} #{classColExpanded}\"\r\n            h.th.setAttribute \"data-colnode\", h.node\r\n            h.th.colSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.rowSpan = 2 if h.children.length is 0 and rowAttrs.length isnt 0\r\n            h.th.textContent = getHeaderText h, colAttrs, opts.colSubtotalDisplay\r\n            if h.children.length isnt 0 and h.col < opts.colSubtotalDisplay.disableFrom\r\n                    ah.expandables++\r\n                    ah.expandedCount += 1\r\n                    h.th.colSpan++ if not opts.colSubtotalDisplay.hideOnExpand\r\n                    if not opts.colSubtotalDisplay.disableExpandCollapse\r\n                        h.th.onclick = (event) ->\r\n                            event = event || window.event\r\n                            h.onClick axisHeaders, h, opts.colSubtotalDisplay \r\n                    h.sTh = createElement \"th\", \"pvtColLabelFiller #{classColShow} col#{h.row} colcol#{h.col} #{classColExpanded}\"\r\n                    h.sTh.setAttribute \"data-colnode\", h.node\r\n                    h.sTh.rowSpan = colAttrs.length-h.col\r\n                    replaceClass h.sTh, classColShow, classColHide if opts.colSubtotalDisplay.hideOnExpand\r\n                    h[h.children[0]].tr.appendChild h.sTh\r\n\r\n            h.parent?.childrenSpan += h.th.colSpan\r\n\r\n            h.clickStatus = clickStatusExpanded\r\n            ah.tr.appendChild h.th\r\n            h.tr = ah.tr\r\n            attrHeaders.push h\r\n            node.counter++ \r\n\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            th = createElement \"th\", \"pvtTotalLabel rowTotal\", opts.localeStrings.totals,\r\n                rowspan: if colAttrs.length is 0 then 1 else colAttrs.length + (if rowAttrs.length is 0 then 0 else 1)\r\n            tr.appendChild th\r\n\r\n        buildRowHeader = (tbody, axisHeaders, attrHeaders, h, rowAttrs, colAttrs, node, opts) ->\r\n            # DF Recurse\r\n            buildRowHeader tbody, axisHeaders, attrHeaders, h[chKey], rowAttrs, colAttrs, node, opts for chKey in h.children\r\n            # Process\r\n            ah = axisHeaders.ah[h.col]\r\n            ah.attrHeaders.push h\r\n\r\n            h.node = node.counter\r\n            h.onClick = collapseRow\r\n            firstChild = h[h.children[0]] if h.children.length isnt 0\r\n\r\n            addClass h.th, \"#{classRowShow} row#{h.row} rowcol#{h.col} #{classRowExpanded}\"\r\n            h.th.setAttribute \"data-rownode\", h.node\r\n            h.th.colSpan = 2 if h.col is rowAttrs.length-1 and colAttrs.length isnt 0\r\n            h.th.rowSpan = h.childrenSpan if h.children.length isnt 0\r\n            h.th.textContent = getHeaderText h, rowAttrs, opts.rowSubtotalDisplay\r\n\r\n            h.tr = createElement \"tr\", \"row#{h.row}\"\r\n            h.tr.appendChild h.th\r\n            if h.children.length is 0\r\n                tbody.appendChild h.tr\r\n            else\r\n                tbody.insertBefore h.tr, firstChild.tr\r\n            \r\n            if h.children.length isnt 0 and h.col < opts.rowSubtotalDisplay.disableFrom\r\n                ++ah.expandedCount\r\n                ++ah.expandables\r\n                if not opts.rowSubtotalDisplay.disableExpandCollapse\r\n                    h.th.onclick = (event) ->\r\n                        event = event || window.event\r\n                        h.onClick axisHeaders, h, opts.rowSubtotalDisplay\r\n\r\n                h.sTh = createElement \"th\", \"pvtRowLabelFiller row#{h.row} rowcol#{h.col} #{classRowExpanded} #{classRowShow}\"\r\n                replaceClass h.sTh, classRowShow, classRowHide if opts.rowSubtotalDisplay.hideOnExpand\r\n                h.sTh.setAttribute \"data-rownode\", h.node\r\n                h.sTh.colSpan = rowAttrs.length-(h.col+1) + if colAttrs.length != 0 then 1 else 0 \r\n\r\n                if opts.rowSubtotalDisplay.displayOnTop\r\n                    h.tr.appendChild h.sTh\r\n                else\r\n                    h.th.rowSpan += 1 # if not opts.rowSubtotalDisplay.hideOnExpand\r\n                    h.sTr = createElement \"tr\", \"row#{h.row}\"\r\n                    h.sTr.appendChild h.sTh\r\n                    tbody.appendChild h.sTr\r\n\r\n            h.th.rowSpan++ if h.children.length isnt 0\r\n            h.parent?.childrenSpan += h.th.rowSpan\r\n\r\n            h.clickStatus = clickStatusExpanded\r\n            attrHeaders.push h\r\n            node.counter++\r\n\r\n        getTableEventHandlers = (value, rowKey, colKey, rowAttrs, colAttrs, opts) ->\r\n            return if not opts.table?.eventHandlers\r\n            eventHandlers = {}\r\n            for own event, handler of opts.table.eventHandlers\r\n                filters = {}\r\n                filters[attr] = colKey[i] for own i, attr of colAttrs when colKey[i]?\r\n                filters[attr] = rowKey[i] for own i, attr of rowAttrs when rowKey[i]?\r\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\r\n            return eventHandlers\r\n\r\n        buildValues = (tbody, colAttrHeaders, rowAttrHeaders, rowAttrs, colAttrs, opts) ->\r\n            for rh in rowAttrHeaders when rh.col is rowAttrs.length-1 or (rh.children.length isnt 0 and rh.col < opts.rowSubtotalDisplay.disableFrom)\r\n                rCls = \"pvtVal row#{rh.row} rowcol#{rh.col} #{classRowExpanded}\"\r\n                if rh.children.length > 0\r\n                    rCls += \" pvtRowSubtotal\"\r\n                    rCls += if opts.rowSubtotalDisplay.hideOnExpand then \" #{classRowHide}\" else \"  #{classRowShow}\"\r\n                else\r\n                    rCls += \" #{classRowShow}\"\r\n                tr = if rh.sTr then rh.sTr else rh.tr\r\n                for ch in colAttrHeaders when ch.col is colAttrs.length-1 or (ch.children.length isnt 0 and ch.col < opts.colSubtotalDisplay.disableFrom)\r\n                    aggregator = tree[rh.flatKey][ch.flatKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    cls = \" #{rCls} col#{ch.row} colcol#{ch.col} #{classColExpanded}\"\r\n                    if ch.children.length > 0\r\n                        cls += \" pvtColSubtotal\"\r\n                        cls += if opts.colSubtotalDisplay.hideOnExpand then \" #{classColHide}\" else \" #{classColShow}\"\r\n                    else\r\n                        cls += \" #{classColShow}\"\r\n                    td = createElement \"td\", cls, aggregator.format(val),\r\n                        \"data-value\": val\r\n                        \"data-rownode\": rh.node\r\n                        \"data-colnode\": ch.node,\r\n                        getTableEventHandlers val, rh.key, ch.key, rowAttrs, colAttrs, opts\r\n\r\n                    tr.appendChild td\r\n\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[rh.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", \"pvtTotal rowTotal #{rCls}\", totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-row\": \"row#{rh.row}\"\r\n                    \"data-rowcol\": \"col#{rh.col}\"\r\n                    \"data-rownode\": rh.node,\r\n                getTableEventHandlers val, rh.key, [], rowAttrs, colAttrs, opts\r\n                tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = createElement \"tr\"\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createElement \"th\", \"pvtTotalLabel colTotal\", opts.localeStrings.totals, {colspan: colspan}\r\n            tr.appendChild th\r\n            return tr\r\n\r\n        buildColTotals = (tr, attrHeaders, rowAttrs, colAttrs, opts) ->\r\n            for h in attrHeaders when  h.col is colAttrs.length-1 or (h.children.length isnt 0 and h.col < opts.colSubtotalDisplay.disableFrom)\r\n                clsNames = \"pvtVal pvtTotal colTotal #{classColExpanded} col#{h.row} colcol#{h.col}\"\r\n                if h.children.length isnt 0\r\n                    clsNames += \" pvtColSubtotal\" \r\n                    clsNames += if opts.colSubtotalDisplay.hideOnExpand then \" #{classColHide}\" else \" #{classColShow}\"\r\n                else\r\n                    clsNames += \" #{classColShow}\"\r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createElement \"td\", clsNames, totalAggregator.format(val),\r\n                    \"data-value\": val\r\n                    \"data-for\": \"col#{h.col}\"\r\n                    \"data-colnode\": \"#{h.node}\",\r\n                    getTableEventHandlers val, [], h.key, rowAttrs, colAttrs, opts\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (tbody, tr, rowAttrs, colAttrs, opts) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createElement \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\r\n                {\"data-value\": val},\r\n                getTableEventHandlers val, [], [], rowAttrs, colAttrs, opts\r\n            tr.appendChild td\r\n            tbody.appendChild tr\r\n\r\n        collapseAxisHeaders = (axisHeaders, col, opts) ->\r\n            collapsible = Math.min axisHeaders.ah.length-2, opts.disableFrom-1\r\n            return if col > collapsible\r\n            for i in [col..collapsible]\r\n                ah = axisHeaders.ah[i]\r\n                replaceClass ah.th, classExpanded, classCollapsed\r\n                ah.th.textContent = \" #{arrowCollapsed} #{ah.text}\"\r\n                ah.clickStatus = clickStatusCollapsed\r\n                ah.onClick = expandAxis\r\n\r\n        adjustAxisHeader = (axisHeaders, col, opts) ->\r\n            ah = axisHeaders.ah[col]\r\n            if ah.expandedCount is 0\r\n                collapseAxisHeaders axisHeaders, col, opts\r\n            else if ah.expandedCount is ah.expandables\r\n                replaceClass ah.th, classCollapsed, classExpanded\r\n                ah.th.textContent = \" #{arrowExpanded} #{ah.text}\"\r\n                ah.clickStatus = clickStatusExpanded\r\n                ah.onClick = collapseAxis\r\n\r\n        hideChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColShow \r\n                .addClass classColHide\r\n\r\n        collapseHiddenColSubtotal = (h, opts) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass classColExpanded\r\n                .addClass classColCollapsed\r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\" if h.children.length isnt 0\r\n            h.th.colSpan = 1\r\n            \r\n        collapseShowColSubtotal = (h, opts) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass classColExpanded\r\n                .addClass classColCollapsed\r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\" if h.children.length isnt 0\r\n            h.th.colSpan = 1\r\n\r\n        collapseChildCol = (ch, h) ->\r\n            collapseChildCol ch[chKey], h for chKey in ch.children when hasClass ch[chKey].th, classColShow\r\n            hideChildCol ch\r\n\r\n        collapseCol = (axisHeaders, h, opts) ->\r\n            colSpan = h.th.colSpan - 1\r\n            collapseChildCol h[chKey], h for chKey in h.children when hasClass h[chKey].th, classColShow\r\n            if h.col < opts.disableFrom\r\n                if hasClass h.th, classColHide\r\n                    collapseHiddenColSubtotal h, opts\r\n                else \r\n                    collapseShowColSubtotal h, opts\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan -= colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandCol\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildCol = (ch) ->\r\n            $(ch.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{ch.node}\\\"], th[data-colnode=\\\"#{ch.node}\\\"]\" \r\n                .removeClass classColHide\r\n                .addClass classColShow\r\n\r\n        expandHideColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColCollapsed} #{classColShow}\" \r\n                .addClass \"#{classColExpanded} #{classColHide}\" \r\n            replaceClass h.th, classColHide, classColShow\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n\r\n        expandShowColSubtotal = (h) ->\r\n            $(h.th).closest 'table.pvtTable'\r\n                .find \"tbody tr td[data-colnode=\\\"#{h.node}\\\"], th[data-colnode=\\\"#{h.node}\\\"]\" \r\n                .removeClass \"#{classColCollapsed} #{classColHide}\"\r\n                .addClass \"#{classColExpanded} #{classColShow}\"\r\n            h.th.colSpan++\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n\r\n        expandChildCol = (ch, opts) ->\r\n            if ch.children.length isnt 0 and opts.hideOnExpand and ch.clickStatus is clickStatusExpanded\r\n                replaceClass ch.th, classColHide, classColShow\r\n            else\r\n                showChildCol ch\r\n            if ch.sTh and ch.clickStatus is clickStatusExpanded and opts.hideOnExpand\r\n                replaceClass ch.sTh, classColShow, classColHide\r\n            expandChildCol ch[chKey], opts for chKey in ch.children if (ch.clickStatus is clickStatusExpanded or ch.col >= opts.disableFrom)\r\n            \r\n        expandCol = (axisHeaders, h, opts) ->\r\n            if h.clickStatus is clickStatusExpanded\r\n                adjustAxisHeader axisHeaders, h.col, opts\r\n                return\r\n            colSpan = 0\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildCol ch, opts\r\n                colSpan += ch.th.colSpan\r\n            h.th.colSpan = colSpan\r\n\r\n            if h.col < opts.disableFrom\r\n                if opts.hideOnExpand\r\n                    expandHideColSubtotal h\r\n                    --colSpan\r\n                else\r\n                    expandShowColSubtotal h\r\n            p = h.parent\r\n            while p\r\n                p.th.colSpan += colSpan\r\n                p = p.parent\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseCol\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        hideChildRow = (ch, opts) ->\r\n            replaceClass cell, classRowShow, classRowHide for cell in ch.tr.querySelectorAll \"th, td\"\r\n            replaceClass cell, classRowShow, classRowHide for cell in ch.sTr.querySelectorAll \"th, td\" if ch.sTr\r\n\r\n        collapseShowRowSubtotal = (h, opts) ->\r\n            h.th.textContent = \" #{arrowCollapsed} #{h.text}\"\r\n            for cell in h.tr.querySelectorAll \"th, td\"\r\n                removeClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n                addClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n            if h.sTr\r\n                for cell in h.sTr.querySelectorAll \"th, td\"\r\n                    removeClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n                    addClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n\r\n        collapseChildRow = (ch, h, opts) ->\r\n            collapseChildRow ch[chKey], h, opts for chKey in ch.children\r\n            hideChildRow ch, opts\r\n\r\n        collapseRow = (axisHeaders, h, opts) ->\r\n            collapseChildRow h[chKey], h, opts for chKey in h.children\r\n            collapseShowRowSubtotal h, opts\r\n            h.clickStatus = clickStatusCollapsed\r\n            h.onClick = expandRow\r\n            axisHeaders.ah[h.col].expandedCount--\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n\r\n        showChildRow = (ch, opts) ->\r\n            replaceClass cell, classRowHide, classRowShow for cell in ch.tr.querySelectorAll \"th, td\"\r\n            replaceClass cell, classRowHide, classRowShow for cell in ch.sTr.querySelectorAll \"th, td\" if ch.sTr\r\n\r\n        expandShowRowSubtotal = (h, opts) ->\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            for cell in h.tr.querySelectorAll \"th, td\"\r\n                removeClass cell, \"#{classRowCollapsed} #{classRowHide}\"\r\n                addClass cell, \"#{classRowExpanded} #{classRowShow}\"\r\n            if h.sTr\r\n                for cell in h.sTr.querySelectorAll \"th, td\"\r\n                    removeClass cell, \"#{classRowCollapsed} #{classRowHide}\"\r\n                    addClass cell, \"#{classRowExpanded} #{classRowShow}\"\r\n\r\n        expandHideRowSubtotal = (h, opts) ->\r\n            h.th.textContent = \" #{arrowExpanded} #{h.text}\"\r\n            for cell in h.tr.querySelectorAll \"th, td\"\r\n                removeClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n                addClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n            removeClass h.th, \"#{classRowCollapsed} #{classRowHide}\"\r\n            addClass cell, \"#{classRowExpanded} #{classRowShow}\"\r\n            if h.sTr\r\n                for cell in h.sTr.querySelectorAll \"th, td\"\r\n                    removeClass cell, \"#{classRowCollapsed} #{classRowShow}\"\r\n                    addClass cell, \"#{classRowExpanded} #{classRowHide}\"\r\n\r\n        expandChildRow = (ch, opts) ->\r\n            if ch.children.length isnt 0 and opts.hideOnExpand and ch.clickStatus is clickStatusExpanded\r\n                replaceClass ch.th, classRowHide, classRowShow\r\n            else\r\n                showChildRow ch, opts\r\n            if ch.sTh and ch.clickStatus is clickStatusExpanded and opts.hideOnExpand\r\n                replaceClass ch.sTh, classRowShow, classRowHide\r\n            expandChildRow ch[chKey], opts for chKey in ch.children if (ch.clickStatus is clickStatusExpanded or ch.col >= opts.disableFrom)\r\n\r\n        expandRow = (axisHeaders, h, opts) ->\r\n            if h.clickStatus is clickStatusExpanded\r\n                adjustAxisHeader axisHeaders, h.col, opts\r\n                return\r\n            for chKey in h.children\r\n                ch = h[chKey]\r\n                expandChildRow ch, opts\r\n            if h.children.length isnt 0 \r\n                if opts.hideOnExpand\r\n                    expandHideRowSubtotal h, opts\r\n                else\r\n                    expandShowRowSubtotal h, opts\r\n            h.clickStatus = clickStatusExpanded\r\n            h.onClick = collapseRow\r\n            axisHeaders.ah[h.col].expandedCount++\r\n            adjustAxisHeader axisHeaders, h.col, opts\r\n    \r\n        collapseAxis = (axisHeaders, col, attrs, opts) ->\r\n            collapsible = Math.min attrs.length-2, opts.disableFrom-1\r\n            return if col > collapsible\r\n            axisHeaders.collapseAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders when h.clickStatus is clickStatusExpanded and h.children.length isnt 0 for i in [collapsible..col] by -1\r\n\r\n        expandAxis = (axisHeaders, col, attrs, opts) ->\r\n            ah = axisHeaders.ah[col]\r\n            axisHeaders.expandAttrHeader axisHeaders, h, opts for h in axisHeaders.ah[i].attrHeaders for i in [0..col] \r\n            # when h.clickStatus is clickStatusCollapsed and h.children.length isnt 0 for i in [0..col] \r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowAttrHeaders = []\r\n            colAttrHeaders = []\r\n\r\n            colKeyHeaders = processKeys colKeys, \"pvtColLabel\" if colAttrs.length isnt 0 and colKeys.length isnt 0\r\n            rowKeyHeaders = processKeys rowKeys, \"pvtRowLabel\" if rowAttrs.length isnt 0 and rowKeys.length isnt 0\r\n\r\n            result = createElement \"table\", \"pvtTable\", null, {style: \"display: none;\"}\r\n\r\n            thead = createElement \"thead\"\r\n            result.appendChild thead\r\n\r\n            if colAttrs.length isnt 0\r\n                colAxisHeaders = buildColAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                node = counter: 0\r\n                buildColHeader colAxisHeaders, colAttrHeaders, colKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in colKeyHeaders.children\r\n                buildRowTotalsHeader colAxisHeaders.ah[0].tr, rowAttrs, colAttrs\r\n\r\n            tbody = createElement \"tbody\"\r\n            result.appendChild tbody\r\n            if rowAttrs.length isnt 0\r\n                rowAxisHeaders = buildRowAxisHeaders thead, rowAttrs, colAttrs, opts\r\n                buildRowTotalsHeader rowAxisHeaders.tr, rowAttrs, colAttrs if colAttrs.length is 0\r\n                node = counter: 0\r\n                buildRowHeader tbody, rowAxisHeaders, rowAttrHeaders, rowKeyHeaders[chKey], rowAttrs, colAttrs, node, opts for chKey in rowKeyHeaders.children\r\n\r\n            buildValues tbody, colAttrHeaders, rowAttrHeaders, rowAttrs, colAttrs, opts\r\n            tr = buildColTotalsHeader rowAttrs, colAttrs\r\n            buildColTotals tr, colAttrHeaders, rowAttrs, colAttrs, opts if colAttrs.length > 0\r\n            buildGrandTotal tbody, tr, rowAttrs, colAttrs, opts\r\n\r\n            collapseAxis colAxisHeaders, opts.colSubtotalDisplay.collapseAt, colAttrs, opts.colSubtotalDisplay\r\n            collapseAxis rowAxisHeaders, opts.rowSubtotalDisplay.collapseAt, rowAttrs, opts.rowSubtotalDisplay\r\n\r\n            result.setAttribute \"data-numrows\", rowKeys.length\r\n            result.setAttribute \"data-numcols\", colKeys.length\r\n            result.style.display = \"\"\r\n\r\n            return result\r\n\r\n        return main rowAttrs, rowKeys, colAttrs, colKeys\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer pvtData, opts\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"heatmap\", opts\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"rowheatmap\", opts\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"colheatmap\", opts\r\n\r\n    # \r\n    # Aggregators\r\n    #\r\n    usFmtPct = $.pivotUtilities.numberFormat digitsAfterDecimal:1, scaler: 100, suffix: \"%\"\r\n    aggregatorTemplates = $.pivotUtilities.aggregatorTemplates;\r\n\r\n    subtotalAggregatorTemplates =\r\n        fractionOf: (wrapped, type=\"row\", formatter=usFmtPct) -> (x...) -> (data, rowKey, colKey) ->\r\n            rowKey = [] if typeof rowKey is \"undefined\"\r\n            colKey = [] if typeof colKey is \"undefined\"\r\n            selector: {row: [rowKey.slice(0, -1),[]], col: [[], colKey.slice(0, -1)]}[type]\r\n            inner: wrapped(x...)(data, rowKey, colKey)\r\n            push: (record) -> @inner.push record\r\n            format: formatter\r\n            value: -> @inner.value() / data.getAggregator(@selector...).inner.value()\r\n            numInputs: wrapped(x...)().numInputs\r\n\r\n    $.pivotUtilities.subtotalAggregatorTemplates = subtotalAggregatorTemplates\r\n\r\n    $.pivotUtilities.subtotal_aggregators = do (tpl = aggregatorTemplates, sTpl = subtotalAggregatorTemplates) ->\r\n        \"Sum As Fraction Of Parent Row\":        sTpl.fractionOf(tpl.sum(), \"row\", usFmtPct)\r\n        \"Sum As Fraction Of Parent Column\":     sTpl.fractionOf(tpl.sum(), \"col\", usFmtPct)\r\n        \"Count As Fraction Of Parent Row\":      sTpl.fractionOf(tpl.count(), \"row\", usFmtPct)\r\n        \"Count As Fraction Of Parent Column\":   sTpl.fractionOf(tpl.count(), \"col\", usFmtPct)\r\n\r\n"]}