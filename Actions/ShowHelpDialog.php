<?php
namespace exface\Core\Actions;

use exface\Core\Widgets\Dialog;
use exface\Core\Exceptions\Actions\ActionCallingWidgetNotSpecifiedError;
use exface\Core\Interfaces\Widgets\iTriggerAction;
use exface\Core\Interfaces\Widgets\iHaveContextualHelp;
use exface\Core\Exceptions\Actions\ActionLogicError;
use exface\Core\CommonLogic\Constants\Icons;
use exface\Core\Interfaces\Model\UiPageInterface;
use exface\Core\Interfaces\WidgetInterface;

/**
 * This action opens a dialog with the auto-generated contextual help for the input widget of it's caller.
 *
 * The action can generate a help widget automatically if used with an input widget, that implements the 
 * `iHaveContextualHelp` interface. This widgets will typically render a help-button by default, that will
 * call this action.
 * 
 * You can explicitly define the widget to be show in the help dialog, replacing the one generated by default.
 * In this case, you can use the action with any widget. In contrast to the generic `ShowDialog` action,
 * it will look&feel as a regular help-dialog.
 * 
 * ## Examples
 * 
 * ### A help-dialog showing some external HTML help page
 * 
 * ```
 * {
 *  "widget_type": "Form",
 *  "help_button": {
 *      "action": {
 *          "alias": "exface.Core.ShowHelpDialog",
 *          "widget": {
 *              "widget_type": "Dialog",
 *              "widgets": [
 *                  {
 *                      "widget_type": "Browser",
 *                      "url": "http://yourdomain.com/custom/help/url"
 *                  }
 *              ]
 *          }
 *      }
 *  }
 * }
 * 
 * ```
 * 
 * ### A static help dialog
 * 
 * ```
 * {
 *  "widget_type": "Form",
 *  "help_button": {
 *      "action": {
 *          "alias": "exface.Core.ShowHelpDialog",
 *          "widget": {
 *              "widget_type": "Dialog",
 *              "widgets": [
 *                  {
 *                      "widget_type": "Text",
 *                      "text": "Lorem ipsum..."
 *                  }
 *              ]
 *          }
 *      }
 *  }
 * }
 * 
 * ```
 *
 * @author Andrej Kabachnik
 *        
 */
class ShowHelpDialog extends ShowDialog
{

    /**
     * 
     * {@inheritDoc}
     * @see \exface\Core\Actions\ShowWidget::init()
     */
    protected function init()
    {
        parent::init();
        $this->setIcon(Icons::QUESTION_CIRCLE_O);
        $this->setPrefillWithFilterContext(false);
        $this->setPrefillWithInputData(false);
        $this->setPrefillWithPrefillData(false);
    }

    /**
     *
     * {@inheritdoc}
     * @see \exface\Core\Actions\ShowDialog::enhanceDialogWidget()
     */
    protected function enhanceDialogWidget(Dialog $dialog)
    {
        $dialog = parent::enhanceDialogWidget($dialog);
        
        // IMPORTANT: remove help button from the help dialog to prevent infinite help popups
        $dialog->setHideHelpButton(true);
        
        return $dialog;
    }
    
    /**
     *
     * {@inheritdoc}
     * @see \exface\Core\Actions\ShowDialog::createDialogWidget()
     */
    protected function createDialogWidget(UiPageInterface $page, WidgetInterface $contained_widget = NULL)
    {
        $dialog = parent::createDialogWidget($page);
        if ($contained_widget === null) {
            if ($this->getWidgetDefinedIn() && $this->getWidgetDefinedIn() instanceof iTriggerAction) {
                if ($this->getWidgetDefinedIn()->getInputWidget() instanceof iHaveContextualHelp) {
                    $this->getWidgetDefinedIn()->getInputWidget()->getHelpWidget($dialog);
                } else {
                    throw new ActionLogicError($this, 'Calling widget cannot generate contextual help: id does not implement the interface iHaveContextualHelp!', '6V9XDV4');
                }
            } else {
                throw new ActionCallingWidgetNotSpecifiedError($this, 'No calling widget passed to action "' . $this->getAliasWithNamespace() . '"!', '6V9XDV4');
            }
        } else {
            $dialog->addWidget($contained_widget);
        }
        return $dialog;
    }
}
?>